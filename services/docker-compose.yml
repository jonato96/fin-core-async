services:

  ms-config:
    container_name: ms-config
    build: config-server
    ports:
      - 8888:8888
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - microservices-net
  ms-discovery:
    container_name: ms-discovery
    build: discovery-server
    environment:
      CONFIG_SERVER: http://ms-config:8888
      DISCOVERY_SERVER_HOST: ms-discovery
    ports:
      - 8761:8761
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    depends_on:
      ms-config:
        condition: service_healthy
    networks:
      - microservices-net
  ms-gateway:
    container_name: ms-gateway
    build: gateway-server
    environment:
      CONFIG_SERVER: http://ms-config:8888
      DISCOVERY_SERVER_HOST: ms-discovery
    ports:
      - 9090:9090
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    depends_on:
      ms-config:
        condition: service_healthy
      ms-discovery:
        condition: service_healthy
    networks:
      - microservices-net
  ms-account:
    container_name: ms-account
    build: account-service
    environment:
      CONFIG_SERVER: http://ms-config:8888
      DISCOVERY_SERVER_HOST: ms-discovery
      DB_HOST: postgres-db
      RABBIT_HOST: rabbitmq
    ports:
      - 8081:8081
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      ms-config:
        condition: service_healthy
      ms-discovery:
        condition: service_healthy
      ms-gateway:
        condition: service_healthy
    networks:
      - microservices-net
  ms-customer:
    container_name: ms-customer
    build: customer-service
    environment:
      CONFIG_SERVER: http://ms-config:8888
      DISCOVERY_SERVER_HOST: ms-discovery
      DB_HOST: postgres-db
      RABBIT_HOST: rabbitmq
    ports:
      - 8080:8080
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      ms-config:
        condition: service_healthy
      ms-discovery:
        condition: service_healthy
      ms-gateway:
        condition: service_healthy
    networks:
      - microservices-net
  postgres-db:
    image: postgres
    container_name: postgres-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 20s
    networks:
      - microservices-net
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 20s
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge